# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RobotApi', [dirname(__file__)])
        except ImportError:
            import _RobotApi
            return _RobotApi
        if fp is not None:
            try:
                _mod = imp.load_module('_RobotApi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _RobotApi = swig_import_helper()
    del swig_import_helper
else:
    import _RobotApi
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


UBTEDU_SDK_SW_VER = _RobotApi.UBTEDU_SDK_SW_VER
UBTEDU_ROBOT_NAME_LEN = _RobotApi.UBTEDU_ROBOT_NAME_LEN
UBTEDU_ROBOT_IP_ADDR_LEN = _RobotApi.UBTEDU_ROBOT_IP_ADDR_LEN
MAX_SHELL_CMD_LEN = _RobotApi.MAX_SHELL_CMD_LEN
UBTEDU_ROBOT_STATUS_TYPE_PLAYACTION = _RobotApi.UBTEDU_ROBOT_STATUS_TYPE_PLAYACTION
UBTEDU_ROBOT_STATUS_TYPE_VOLUME = _RobotApi.UBTEDU_ROBOT_STATUS_TYPE_VOLUME
UBTEDU_ROBOT_STATUS_TYPE_POWER_VOLTAGE = _RobotApi.UBTEDU_ROBOT_STATUS_TYPE_POWER_VOLTAGE
UBTEDU_ROBOT_STATUS_TYPE_POWER_RECHARGE = _RobotApi.UBTEDU_ROBOT_STATUS_TYPE_POWER_RECHARGE
UBTEDU_ROBOT_STATUS_TYPE_POWER_PERCENT = _RobotApi.UBTEDU_ROBOT_STATUS_TYPE_POWER_PERCENT
UBTEDU_ROBOT_STATUS_TYPE_INVALID = _RobotApi.UBTEDU_ROBOT_STATUS_TYPE_INVALID
UBTEDU_ROBOT_PLAY_STATUS_IDLE = _RobotApi.UBTEDU_ROBOT_PLAY_STATUS_IDLE
UBTEDU_ROBOT_PLAY_STATUS_PLAYING = _RobotApi.UBTEDU_ROBOT_PLAY_STATUS_PLAYING
UBTEDU_ROBOT_PLAY_STATUS_PAUSED = _RobotApi.UBTEDU_ROBOT_PLAY_STATUS_PAUSED
UBTEDU_ROBOT_PLAYSTATUS_END = _RobotApi.UBTEDU_ROBOT_PLAYSTATUS_END
UBTEDU_ROBOT_PLAY_STATUS_INVALID = _RobotApi.UBTEDU_ROBOT_PLAY_STATUS_INVALID
UBTEDU_RC_SUCCESS = _RobotApi.UBTEDU_RC_SUCCESS
UBTEDU_RC_FAILED = _RobotApi.UBTEDU_RC_FAILED
UBTEDU_RC_NORESOURCE = _RobotApi.UBTEDU_RC_NORESOURCE
UBTEDU_RC_NOT_FOUND = _RobotApi.UBTEDU_RC_NOT_FOUND
UBTEDU_RC_WRONG_PARAM = _RobotApi.UBTEDU_RC_WRONG_PARAM
UBTEDU_RC_SOCKET_FAILED = _RobotApi.UBTEDU_RC_SOCKET_FAILED
UBTEDU_RC_SOCKET_NORESOURCE = _RobotApi.UBTEDU_RC_SOCKET_NORESOURCE
UBTEDU_RC_SOCKET_TIMEOUT = _RobotApi.UBTEDU_RC_SOCKET_TIMEOUT
UBTEDU_RC_SOCKET_ENCODE_FAILED = _RobotApi.UBTEDU_RC_SOCKET_ENCODE_FAILED
UBTEDU_RC_SOCKET_DECODE_FAILED = _RobotApi.UBTEDU_RC_SOCKET_DECODE_FAILED
UBTEDU_RC_SOCKET_ENCODE_ERROR = _RobotApi.UBTEDU_RC_SOCKET_ENCODE_ERROR
UBTEDU_RC_SOCKET_DECODE_ERROR = _RobotApi.UBTEDU_RC_SOCKET_DECODE_ERROR
UBTEDU_RC_SOCKET_SENDERROR = _RobotApi.UBTEDU_RC_SOCKET_SENDERROR
UBTEDU_RC_VOICE_FAILED = _RobotApi.UBTEDU_RC_VOICE_FAILED
UBTEDU_RC_VOICE_GRAMMAR_ERROR = _RobotApi.UBTEDU_RC_VOICE_GRAMMAR_ERROR
UBTEDU_RC_VOICE_AIUIDECODE_ERROR = _RobotApi.UBTEDU_RC_VOICE_AIUIDECODE_ERROR
UBTEDU_RC_LAST = _RobotApi.UBTEDU_RC_LAST
UBTEDU_ROBOT_SOFTVERSION_TYPE_STM32 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_STM32
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS1 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS1
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS2 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS2
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS3 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS3
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS4 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS4
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS5 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS5
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS6 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS6
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS7 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS7
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS8 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS8
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS9 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS9
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS10 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS10
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS11 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS11
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS12 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS12
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS13 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS13
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS14 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS14
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS15 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS15
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS16 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS16
UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS17 = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SERVOS17
UBTEDU_ROBOT_SOFTVERSION_TYPE_SDK = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_SDK
UBTEDU_ROBOT_SOFTVERSION_TYPE_RASPI = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_RASPI
UBTEDU_ROBOT_SOFTVERSION_TYPE_INVALID = _RobotApi.UBTEDU_ROBOT_SOFTVERSION_TYPE_INVALID
class UBTEDU_ROBOTSERVO_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTSERVO_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTSERVO_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["SERVO1_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO1_ANGLE_set
    __swig_getmethods__["SERVO1_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO1_ANGLE_get
    if _newclass:SERVO1_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO1_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO1_ANGLE_set)
    __swig_setmethods__["SERVO2_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO2_ANGLE_set
    __swig_getmethods__["SERVO2_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO2_ANGLE_get
    if _newclass:SERVO2_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO2_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO2_ANGLE_set)
    __swig_setmethods__["SERVO3_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO3_ANGLE_set
    __swig_getmethods__["SERVO3_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO3_ANGLE_get
    if _newclass:SERVO3_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO3_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO3_ANGLE_set)
    __swig_setmethods__["SERVO4_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO4_ANGLE_set
    __swig_getmethods__["SERVO4_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO4_ANGLE_get
    if _newclass:SERVO4_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO4_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO4_ANGLE_set)
    __swig_setmethods__["SERVO5_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO5_ANGLE_set
    __swig_getmethods__["SERVO5_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO5_ANGLE_get
    if _newclass:SERVO5_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO5_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO5_ANGLE_set)
    __swig_setmethods__["SERVO6_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO6_ANGLE_set
    __swig_getmethods__["SERVO6_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO6_ANGLE_get
    if _newclass:SERVO6_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO6_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO6_ANGLE_set)
    __swig_setmethods__["SERVO7_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO7_ANGLE_set
    __swig_getmethods__["SERVO7_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO7_ANGLE_get
    if _newclass:SERVO7_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO7_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO7_ANGLE_set)
    __swig_setmethods__["SERVO8_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO8_ANGLE_set
    __swig_getmethods__["SERVO8_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO8_ANGLE_get
    if _newclass:SERVO8_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO8_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO8_ANGLE_set)
    __swig_setmethods__["SERVO9_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO9_ANGLE_set
    __swig_getmethods__["SERVO9_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO9_ANGLE_get
    if _newclass:SERVO9_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO9_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO9_ANGLE_set)
    __swig_setmethods__["SERVO10_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO10_ANGLE_set
    __swig_getmethods__["SERVO10_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO10_ANGLE_get
    if _newclass:SERVO10_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO10_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO10_ANGLE_set)
    __swig_setmethods__["SERVO11_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO11_ANGLE_set
    __swig_getmethods__["SERVO11_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO11_ANGLE_get
    if _newclass:SERVO11_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO11_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO11_ANGLE_set)
    __swig_setmethods__["SERVO12_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO12_ANGLE_set
    __swig_getmethods__["SERVO12_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO12_ANGLE_get
    if _newclass:SERVO12_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO12_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO12_ANGLE_set)
    __swig_setmethods__["SERVO13_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO13_ANGLE_set
    __swig_getmethods__["SERVO13_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO13_ANGLE_get
    if _newclass:SERVO13_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO13_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO13_ANGLE_set)
    __swig_setmethods__["SERVO14_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO14_ANGLE_set
    __swig_getmethods__["SERVO14_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO14_ANGLE_get
    if _newclass:SERVO14_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO14_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO14_ANGLE_set)
    __swig_setmethods__["SERVO15_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO15_ANGLE_set
    __swig_getmethods__["SERVO15_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO15_ANGLE_get
    if _newclass:SERVO15_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO15_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO15_ANGLE_set)
    __swig_setmethods__["SERVO16_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO16_ANGLE_set
    __swig_getmethods__["SERVO16_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO16_ANGLE_get
    if _newclass:SERVO16_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO16_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO16_ANGLE_set)
    __swig_setmethods__["SERVO17_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO17_ANGLE_set
    __swig_getmethods__["SERVO17_ANGLE"] = _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO17_ANGLE_get
    if _newclass:SERVO17_ANGLE = _swig_property(_RobotApi.UBTEDU_ROBOTSERVO_T_SERVO17_ANGLE_get, _RobotApi.UBTEDU_ROBOTSERVO_T_SERVO17_ANGLE_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTSERVO_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTSERVO_T
    __del__ = lambda self : None;
UBTEDU_ROBOTSERVO_T_swigregister = _RobotApi.UBTEDU_ROBOTSERVO_T_swigregister
UBTEDU_ROBOTSERVO_T_swigregister(UBTEDU_ROBOTSERVO_T)

class UBTEDU_ROBOTINFO_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTINFO_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTINFO_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["acName"] = _RobotApi.UBTEDU_ROBOTINFO_T_acName_set
    __swig_getmethods__["acName"] = _RobotApi.UBTEDU_ROBOTINFO_T_acName_get
    if _newclass:acName = _swig_property(_RobotApi.UBTEDU_ROBOTINFO_T_acName_get, _RobotApi.UBTEDU_ROBOTINFO_T_acName_set)
    __swig_setmethods__["acIPAddr"] = _RobotApi.UBTEDU_ROBOTINFO_T_acIPAddr_set
    __swig_getmethods__["acIPAddr"] = _RobotApi.UBTEDU_ROBOTINFO_T_acIPAddr_get
    if _newclass:acIPAddr = _swig_property(_RobotApi.UBTEDU_ROBOTINFO_T_acIPAddr_get, _RobotApi.UBTEDU_ROBOTINFO_T_acIPAddr_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTINFO_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTINFO_T
    __del__ = lambda self : None;
UBTEDU_ROBOTINFO_T_swigregister = _RobotApi.UBTEDU_ROBOTINFO_T_swigregister
UBTEDU_ROBOTINFO_T_swigregister(UBTEDU_ROBOTINFO_T)

class UBTEDU_ROBOTGYRO_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTGYRO_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTGYRO_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dGyroxValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroxValue_set
    __swig_getmethods__["dGyroxValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroxValue_get
    if _newclass:dGyroxValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroxValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroxValue_set)
    __swig_setmethods__["dGyroyValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroyValue_set
    __swig_getmethods__["dGyroyValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroyValue_get
    if _newclass:dGyroyValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroyValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyroyValue_set)
    __swig_setmethods__["dGyrozValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyrozValue_set
    __swig_getmethods__["dGyrozValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyrozValue_get
    if _newclass:dGyrozValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyrozValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dGyrozValue_set)
    __swig_setmethods__["dAccexValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccexValue_set
    __swig_getmethods__["dAccexValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccexValue_get
    if _newclass:dAccexValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccexValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccexValue_set)
    __swig_setmethods__["dAcceyValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAcceyValue_set
    __swig_getmethods__["dAcceyValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAcceyValue_get
    if _newclass:dAcceyValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAcceyValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAcceyValue_set)
    __swig_setmethods__["dAccezValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccezValue_set
    __swig_getmethods__["dAccezValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccezValue_get
    if _newclass:dAccezValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccezValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dAccezValue_set)
    __swig_setmethods__["dCompassxValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassxValue_set
    __swig_getmethods__["dCompassxValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassxValue_get
    if _newclass:dCompassxValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassxValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassxValue_set)
    __swig_setmethods__["dCompassyValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassyValue_set
    __swig_getmethods__["dCompassyValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassyValue_get
    if _newclass:dCompassyValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassyValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompassyValue_set)
    __swig_setmethods__["dCompasszValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompasszValue_set
    __swig_getmethods__["dCompasszValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompasszValue_get
    if _newclass:dCompasszValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompasszValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dCompasszValue_set)
    __swig_setmethods__["dEulerxValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerxValue_set
    __swig_getmethods__["dEulerxValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerxValue_get
    if _newclass:dEulerxValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerxValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerxValue_set)
    __swig_setmethods__["dEuleryValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEuleryValue_set
    __swig_getmethods__["dEuleryValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEuleryValue_get
    if _newclass:dEuleryValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEuleryValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEuleryValue_set)
    __swig_setmethods__["dEulerzValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerzValue_set
    __swig_getmethods__["dEulerzValue"] = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerzValue_get
    if _newclass:dEulerzValue = _swig_property(_RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerzValue_get, _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_dEulerzValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTGYRO_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTGYRO_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTGYRO_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTGYRO_SENSOR_T_swigregister
UBTEDU_ROBOTGYRO_SENSOR_T_swigregister(UBTEDU_ROBOTGYRO_SENSOR_T)

class UBTEDU_ROBOTENV_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTENV_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTENV_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iTempValue"] = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iTempValue_set
    __swig_getmethods__["iTempValue"] = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iTempValue_get
    if _newclass:iTempValue = _swig_property(_RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iTempValue_get, _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iTempValue_set)
    __swig_setmethods__["iHumiValue"] = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iHumiValue_set
    __swig_getmethods__["iHumiValue"] = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iHumiValue_get
    if _newclass:iHumiValue = _swig_property(_RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iHumiValue_get, _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iHumiValue_set)
    __swig_setmethods__["iPresValue"] = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iPresValue_set
    __swig_getmethods__["iPresValue"] = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iPresValue_get
    if _newclass:iPresValue = _swig_property(_RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iPresValue_get, _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_iPresValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTENV_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTENV_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTENV_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTENV_SENSOR_T_swigregister
UBTEDU_ROBOTENV_SENSOR_T_swigregister(UBTEDU_ROBOTENV_SENSOR_T)

class UBTEDU_ROBOTRASPBOARD_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTRASPBOARD_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTRASPBOARD_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTRASPBOARD_SENSOR_T_iValue_set
    __swig_getmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTRASPBOARD_SENSOR_T_iValue_get
    if _newclass:iValue = _swig_property(_RobotApi.UBTEDU_ROBOTRASPBOARD_SENSOR_T_iValue_get, _RobotApi.UBTEDU_ROBOTRASPBOARD_SENSOR_T_iValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTRASPBOARD_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTRASPBOARD_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTRASPBOARD_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTRASPBOARD_SENSOR_T_swigregister
UBTEDU_ROBOTRASPBOARD_SENSOR_T_swigregister(UBTEDU_ROBOTRASPBOARD_SENSOR_T)

class UBTEDU_ROBOTULTRASONIC_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTULTRASONIC_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTULTRASONIC_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTULTRASONIC_SENSOR_T_iValue_set
    __swig_getmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTULTRASONIC_SENSOR_T_iValue_get
    if _newclass:iValue = _swig_property(_RobotApi.UBTEDU_ROBOTULTRASONIC_SENSOR_T_iValue_get, _RobotApi.UBTEDU_ROBOTULTRASONIC_SENSOR_T_iValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTULTRASONIC_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTULTRASONIC_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTULTRASONIC_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTULTRASONIC_SENSOR_T_swigregister
UBTEDU_ROBOTULTRASONIC_SENSOR_T_swigregister(UBTEDU_ROBOTULTRASONIC_SENSOR_T)

class UBTEDU_ROBOTINFRARED_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTINFRARED_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTINFRARED_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTINFRARED_SENSOR_T_iValue_set
    __swig_getmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTINFRARED_SENSOR_T_iValue_get
    if _newclass:iValue = _swig_property(_RobotApi.UBTEDU_ROBOTINFRARED_SENSOR_T_iValue_get, _RobotApi.UBTEDU_ROBOTINFRARED_SENSOR_T_iValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTINFRARED_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTINFRARED_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTINFRARED_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTINFRARED_SENSOR_T_swigregister
UBTEDU_ROBOTINFRARED_SENSOR_T_swigregister(UBTEDU_ROBOTINFRARED_SENSOR_T)

class UBTEDU_ROBOTTOUCH_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTTOUCH_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTTOUCH_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTTOUCH_SENSOR_T_iValue_set
    __swig_getmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTTOUCH_SENSOR_T_iValue_get
    if _newclass:iValue = _swig_property(_RobotApi.UBTEDU_ROBOTTOUCH_SENSOR_T_iValue_get, _RobotApi.UBTEDU_ROBOTTOUCH_SENSOR_T_iValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTTOUCH_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTTOUCH_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTTOUCH_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTTOUCH_SENSOR_T_swigregister
UBTEDU_ROBOTTOUCH_SENSOR_T_swigregister(UBTEDU_ROBOTTOUCH_SENSOR_T)

class UBTEDU_ROBOTCOLOR_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTCOLOR_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTCOLOR_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iRedValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iRedValue_set
    __swig_getmethods__["iRedValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iRedValue_get
    if _newclass:iRedValue = _swig_property(_RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iRedValue_get, _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iRedValue_set)
    __swig_setmethods__["iGreenValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iGreenValue_set
    __swig_getmethods__["iGreenValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iGreenValue_get
    if _newclass:iGreenValue = _swig_property(_RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iGreenValue_get, _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iGreenValue_set)
    __swig_setmethods__["iBlueValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iBlueValue_set
    __swig_getmethods__["iBlueValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iBlueValue_get
    if _newclass:iBlueValue = _swig_property(_RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iBlueValue_get, _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iBlueValue_set)
    __swig_setmethods__["iClearValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iClearValue_set
    __swig_getmethods__["iClearValue"] = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iClearValue_get
    if _newclass:iClearValue = _swig_property(_RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iClearValue_get, _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_iClearValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTCOLOR_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTCOLOR_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTCOLOR_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTCOLOR_SENSOR_T_swigregister
UBTEDU_ROBOTCOLOR_SENSOR_T_swigregister(UBTEDU_ROBOTCOLOR_SENSOR_T)

class UBTEDU_ROBOTPRESSURE_SENSOR_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOTPRESSURE_SENSOR_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOTPRESSURE_SENSOR_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTPRESSURE_SENSOR_T_iValue_set
    __swig_getmethods__["iValue"] = _RobotApi.UBTEDU_ROBOTPRESSURE_SENSOR_T_iValue_get
    if _newclass:iValue = _swig_property(_RobotApi.UBTEDU_ROBOTPRESSURE_SENSOR_T_iValue_get, _RobotApi.UBTEDU_ROBOTPRESSURE_SENSOR_T_iValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOTPRESSURE_SENSOR_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOTPRESSURE_SENSOR_T
    __del__ = lambda self : None;
UBTEDU_ROBOTPRESSURE_SENSOR_T_swigregister = _RobotApi.UBTEDU_ROBOTPRESSURE_SENSOR_T_swigregister
UBTEDU_ROBOTPRESSURE_SENSOR_T_swigregister(UBTEDU_ROBOTPRESSURE_SENSOR_T)

class UBTEDU_ROBOT_Battery_T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UBTEDU_ROBOT_Battery_T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UBTEDU_ROBOT_Battery_T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iValue"] = _RobotApi.UBTEDU_ROBOT_Battery_T_iValue_set
    __swig_getmethods__["iValue"] = _RobotApi.UBTEDU_ROBOT_Battery_T_iValue_get
    if _newclass:iValue = _swig_property(_RobotApi.UBTEDU_ROBOT_Battery_T_iValue_get, _RobotApi.UBTEDU_ROBOT_Battery_T_iValue_set)
    def __init__(self): 
        this = _RobotApi.new_UBTEDU_ROBOT_Battery_T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _RobotApi.delete_UBTEDU_ROBOT_Battery_T
    __del__ = lambda self : None;
UBTEDU_ROBOT_Battery_T_swigregister = _RobotApi.UBTEDU_ROBOT_Battery_T_swigregister
UBTEDU_ROBOT_Battery_T_swigregister(UBTEDU_ROBOT_Battery_T)


def ubtRobotInitialize():
  return _RobotApi.ubtRobotInitialize()
ubtRobotInitialize = _RobotApi.ubtRobotInitialize

def ubtGetSWVersion(*args):
  return _RobotApi.ubtGetSWVersion(*args)
ubtGetSWVersion = _RobotApi.ubtGetSWVersion

def ubtGetRobotStatus(*args):
  return _RobotApi.ubtGetRobotStatus(*args)
ubtGetRobotStatus = _RobotApi.ubtGetRobotStatus

def ubtCheckAPPStatus(*args):
  return _RobotApi.ubtCheckAPPStatus(*args)
ubtCheckAPPStatus = _RobotApi.ubtCheckAPPStatus

def ubtDetectVoiceMsg(*args):
  return _RobotApi.ubtDetectVoiceMsg(*args)
ubtDetectVoiceMsg = _RobotApi.ubtDetectVoiceMsg

def ubtGetRobotServo(*args):
  return _RobotApi.ubtGetRobotServo(*args)
ubtGetRobotServo = _RobotApi.ubtGetRobotServo

def ubtSetRobotServo(*args):
  return _RobotApi.ubtSetRobotServo(*args)
ubtSetRobotServo = _RobotApi.ubtSetRobotServo

def ubtSetRobotVolume(*args):
  return _RobotApi.ubtSetRobotVolume(*args)
ubtSetRobotVolume = _RobotApi.ubtSetRobotVolume

def ubtSetRobotMotion(*args):
  return _RobotApi.ubtSetRobotMotion(*args)
ubtSetRobotMotion = _RobotApi.ubtSetRobotMotion

def ubtReadSensorValue(*args):
  return _RobotApi.ubtReadSensorValue(*args)
ubtReadSensorValue = _RobotApi.ubtReadSensorValue

def ubtReadSensorValueByAddr(*args):
  return _RobotApi.ubtReadSensorValueByAddr(*args)
ubtReadSensorValueByAddr = _RobotApi.ubtReadSensorValueByAddr

def ubtSetRobotLED(*args):
  return _RobotApi.ubtSetRobotLED(*args)
ubtSetRobotLED = _RobotApi.ubtSetRobotLED

def ubtStartRobotAction(*args):
  return _RobotApi.ubtStartRobotAction(*args)
ubtStartRobotAction = _RobotApi.ubtStartRobotAction

def ubtStopRobotAction():
  return _RobotApi.ubtStopRobotAction()
ubtStopRobotAction = _RobotApi.ubtStopRobotAction

def ubtVoiceStart():
  return _RobotApi.ubtVoiceStart()
ubtVoiceStart = _RobotApi.ubtVoiceStart

def ubtVoiceStop():
  return _RobotApi.ubtVoiceStop()
ubtVoiceStop = _RobotApi.ubtVoiceStop

def ubtVoiceTTS(*args):
  return _RobotApi.ubtVoiceTTS(*args)
ubtVoiceTTS = _RobotApi.ubtVoiceTTS

def ubtPlayMusic(*args):
  return _RobotApi.ubtPlayMusic(*args)
ubtPlayMusic = _RobotApi.ubtPlayMusic

def ubtGetMusicList(*args):
  return _RobotApi.ubtGetMusicList(*args)
ubtGetMusicList = _RobotApi.ubtGetMusicList

def ubtEventDetect(*args):
  return _RobotApi.ubtEventDetect(*args)
ubtEventDetect = _RobotApi.ubtEventDetect

def ubtFaceCompare(*args):
  return _RobotApi.ubtFaceCompare(*args)
ubtFaceCompare = _RobotApi.ubtFaceCompare

def ubtVisionDetect(*args):
  return _RobotApi.ubtVisionDetect(*args)
ubtVisionDetect = _RobotApi.ubtVisionDetect

def ubtTakeAPhoto(*args):
  return _RobotApi.ubtTakeAPhoto(*args)
ubtTakeAPhoto = _RobotApi.ubtTakeAPhoto

def ubtTransmitCMD(*args):
  return _RobotApi.ubtTransmitCMD(*args)
ubtTransmitCMD = _RobotApi.ubtTransmitCMD

def ubtReportStatusToApp(*args):
  return _RobotApi.ubtReportStatusToApp(*args)
ubtReportStatusToApp = _RobotApi.ubtReportStatusToApp

def ubtRobotDiscovery(*args):
  return _RobotApi.ubtRobotDiscovery(*args)
ubtRobotDiscovery = _RobotApi.ubtRobotDiscovery

def ubtRobotConnect(*args):
  return _RobotApi.ubtRobotConnect(*args)
ubtRobotConnect = _RobotApi.ubtRobotConnect

def ubtRobotDisconnect(*args):
  return _RobotApi.ubtRobotDisconnect(*args)
ubtRobotDisconnect = _RobotApi.ubtRobotDisconnect

def ubtOpenCameraStream(*args):
  return _RobotApi.ubtOpenCameraStream(*args)
ubtOpenCameraStream = _RobotApi.ubtOpenCameraStream

def ubtCloseCameraSteam():
  return _RobotApi.ubtCloseCameraSteam()
ubtCloseCameraSteam = _RobotApi.ubtCloseCameraSteam

def ubtCaptureDLPhoto(*args):
  return _RobotApi.ubtCaptureDLPhoto(*args)
ubtCaptureDLPhoto = _RobotApi.ubtCaptureDLPhoto

def ubtAddDLSample(*args):
  return _RobotApi.ubtAddDLSample(*args)
ubtAddDLSample = _RobotApi.ubtAddDLSample

def ubtFaceAgeGender(*args):
  return _RobotApi.ubtFaceAgeGender(*args)
ubtFaceAgeGender = _RobotApi.ubtFaceAgeGender

def ubtDeleteDLSample(*args):
  return _RobotApi.ubtDeleteDLSample(*args)
ubtDeleteDLSample = _RobotApi.ubtDeleteDLSample

def ubtResetDLSample(*args):
  return _RobotApi.ubtResetDLSample(*args)
ubtResetDLSample = _RobotApi.ubtResetDLSample

def ubtRobotDeinitialize():
  return _RobotApi.ubtRobotDeinitialize()
ubtRobotDeinitialize = _RobotApi.ubtRobotDeinitialize
# This file is compatible with both classic and new-style classes.


